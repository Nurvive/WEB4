// <auto-generated />
using System;
using MVC.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230106074001_another")]
    partial class another
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MVC.Models.Project", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("customer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("directorid")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("end")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("executor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint>("priority")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("directorid");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("MVC.Models.ProjectWorker", b =>
                {
                    b.Property<Guid>("WorkerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("WorkerId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("projectsWorkers");
                });

            modelBuilder.Entity("MVC.Models.Worker", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("patronymic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("workers");
                });

            modelBuilder.Entity("MVC.Models.Project", b =>
                {
                    b.HasOne("MVC.Models.Worker", "director")
                        .WithMany()
                        .HasForeignKey("directorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("director");
                });

            modelBuilder.Entity("MVC.Models.ProjectWorker", b =>
                {
                    b.HasOne("MVC.Models.Project", "Project")
                        .WithMany("ProjectWorkers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC.Models.Worker", "Worker")
                        .WithMany("ProjectWorkers")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("MVC.Models.Project", b =>
                {
                    b.Navigation("ProjectWorkers");
                });

            modelBuilder.Entity("MVC.Models.Worker", b =>
                {
                    b.Navigation("ProjectWorkers");
                });
#pragma warning restore 612, 618
        }
    }
}
